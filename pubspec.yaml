name: flutter_online_tutor
description: A new Flutter project.

publish_to: 'none' # Remove this line if you wish to publish to pub.dev

version: 1.0.0+1

environment:
  sdk: ">=2.16.0 <3.0.0"

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter

  cupertino_icons: ^1.0.2

  # Draw SVG (and some Android VectorDrawable (XML)) files on a Flutter Widget.
  # (c) MIT License. By Dan Field.
  flutter_svg: ^1.0.3

  # Functional Programming in Dart.
  # (c) MIT License. By Björn Sperber.
  dartz: ^0.10.1

  # AutoRoute is a declarative routing solution,
  # where everything needed for navigation is automatically generated for you.
  # (c) MIT License. By Milad Akarie.
  auto_route: ^3.2.4

  # Yet another bottom navigation bar, but with a few key promises.
  # (c) MIT License. By Luke Pighetti.
  salomon_bottom_bar: ^3.2.0

  # Contains code to deal with internationalized/localized messages, date and number formatting
  # and parsing, bi-directional text, and other internationalization issues.
  # (c) BSD 3-Clause License. By the Dart project authors.
  intl: ^0.17.0

  # Twitter Emojis for Flutter, this package supports svg and png 72x72 emojis
  # (c) MIT License. By Abdelhadi Shaar.
  twemoji: ^0.4.2

  # A package to include fonts from fonts.google.com in your Flutter app.
  # (c) MIT License. By material.io.
  google_fonts: ^2.3.1

  # A simple yet fully customizable ratingbar for flutter which also include a rating bar indicator,
  # supporting any fraction of rating.
  # (c) MIT License. By Sarbagya Dhaubanjar.
  flutter_rating_bar: ^4.0.0

  # Allows resizing and repositioning the window containing the Flutter content, as well as querying
  # screen information
  # This is a prototype, and in the long term is expected to be replaced by functionality within
  # the Flutter framework.
  # (c) Apache-2.0 License.
  window_size:
    git:
      url: https://github.com/google/flutter-desktop-embedding.git
      path: plugins/window_size

  # Utilities for working with English words.
  # (c) MIT License. By Filip Hracek.
  english_words: ^4.0.0

  # A Flutter implementation of an expandable and animated floating search bar
  # (c) MIT License. By bxqm.
  material_floating_search_bar: ^0.3.7

  # Provides a collection of Flutter grids layouts (staggered, masonry, quilted, woven, etc.).
  # (c) MIT License. By Romain Rastel.
  flutter_staggered_grid_view: ^0.6.1

  # A flexible multi select package for Flutter. Make multi select widgets the way you want.
  # (c) BSD 2-Clause License. By Christiaan H. Botha.
  multi_select_flutter: ^4.0.0

  # Highly customizable, feature-packed calendar widget for Flutter.
  # (c) Apache-2.0 License. By Aleksander Woźniak.
  table_calendar: ^3.0.4

  # A Flutter package to make and use beautiful color scheme based themes.
  # (c) BSD-3-Clause License. By Mike Rydstrom.
  flex_color_scheme: ^4.2.0

  # Simple direct Service Locator that allows to decouple the interface from a concrete implementation and to access the
  # concrete implementation from everywhere in your App.
  # (c) MIT License. By Thomas Burkhart.
  get_it: ^7.2.0

  # Injectable is a convenient code generator for get_it. Inspired by Angular DI, Guice DI and inject.dart.
  # (c) MIT License. By Milad Akarie.
  injectable: ^1.5.3

  # (c) BSD 3-Clause License. By The Flutter Authors.
  shared_preferences: ^2.0.13

  # Code generator for unions/pattern-matching/copy
  # # (c) MIT License. By Remi Rousselet.
  freezed_annotation: ^1.1.0

  # A predictable state management library that helps implement the BLoC (Business Logic Component)
  # design pattern.
  # (c) MIT License. By Felix Angelov.
  bloc: ^8.0.3
  flutter_bloc: ^8.0.1
  hydrated_bloc: ^8.1.0

  # Automatically generate code for converting to and from JSON by annotating Dart classes.
  # (c) BSD 3-Clause License. By the Dart project authors.
  json_annotation: ^4.4.0

dev_dependencies:
  flutter_test:
    sdk: flutter

  flutter_lints: ^1.0.0
  build_runner: ^2.1.7
  auto_route_generator: 3.2.3
  injectable_generator:
  freezed:
  json_serializable: ^6.1.5

# The following section is specific to Flutter.
flutter:
  uses-material-design: true
  generate: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/images/authentication/
    - assets/icons/
    - assets/icons/twemoji/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
